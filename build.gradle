plugins.apply 'fabric-loom'
plugins.apply 'io.shcm.shsupercm.fabric.fletchingtable'

version = "${property('mod.version')}+${stonecutter.current().version()}"
group = 'shcm.shsupercm.fabric.citresewn'

repositories {
    maven { url 'https://maven.terraformersmc.com/releases/' }
    maven { url 'https://maven.shedaniel.me/' }
}

dependencies {
    minecraft "com.mojang:minecraft:${stonecutter.current().version()}"
    mappings "net.fabricmc:yarn:${property('deps.yarn')}:v2"

    modCompileOnly "net.fabricmc:fabric-loader:${property('deps.fabric-loader')}"
    modCompileOnly "net.fabricmc.fabric-api:fabric-api:${property('deps.fabric-api')}"

    modCompileOnly "com.terraformersmc:modmenu:${property('deps.modmenu')}"
    modCompileOnly "me.shedaniel.cloth:cloth-config-fabric:${property('deps.cloth-config')}"

    include project(":defaults:${stonecutter.current().version()}")
}

fletchingTable {
    defaultMixinEnvironment = "auto"
}

loom {
    accessWidenerPath = file("../../src/main/resources/citresewn.accesswidener")

    runConfigs.client.ideConfigGenerated = false
    runConfigs.server.ideConfigGenerated = false
}

java {
    withSourcesJar()
    sourceCompatibility = JavaVersion.VERSION_17
    targetCompatibility = JavaVersion.VERSION_17

    archivesBaseName = property('mod.jarname')
}

processResources {
    filesMatching('fabric.mod.json') {
        expand 'mod_version': version, 'mod_target_mc': project.property('mod.target-mc')
    }
}

jar {
    archiveClassifier.set 'dev'

    from rootProject.file('LICENSE')
}
